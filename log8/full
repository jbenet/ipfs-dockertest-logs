sh bin/clean.sh
fig stop
fig rm -v --force
No stopped containers
rm -f bin/random
rm -f data/filetiny
rm -f data/filerand
rm -rf build/*
cd .. && docker build -t ipfs-test-latest .
Sending build context to Docker daemon 557.1 kBSending build context to Docker daemon 1.114 MBSending build context to Docker daemon 1.671 MBSending build context to Docker daemon 2.228 MBSending build context to Docker daemon 2.785 MBSending build context to Docker daemon 3.342 MBSending build context to Docker daemon 3.899 MBSending build context to Docker daemon 4.456 MBSending build context to Docker daemon 5.014 MBSending build context to Docker daemon 5.571 MBSending build context to Docker daemon 6.128 MBSending build context to Docker daemon 6.685 MBSending build context to Docker daemon 7.242 MBSending build context to Docker daemon 7.799 MBSending build context to Docker daemon 8.356 MBSending build context to Docker daemon 8.913 MBSending build context to Docker daemon  9.47 MBSending build context to Docker daemon 10.03 MBSending build context to Docker daemon 10.58 MBSending build context to Docker daemon 11.14 MBSending build context to Docker daemon  11.7 MBSending build context to Docker daemon 12.26 MBSending build context to Docker daemon 12.81 MBSending build context to Docker daemon 13.37 MBSending build context to Docker daemon 13.93 MBSending build context to Docker daemon 14.48 MBSending build context to Docker daemon 15.04 MBSending build context to Docker daemon  15.6 MBSending build context to Docker daemon 16.15 MBSending build context to Docker daemon 16.71 MBSending build context to Docker daemon 17.27 MBSending build context to Docker daemon 17.83 MBSending build context to Docker daemon 18.38 MBSending build context to Docker daemon 18.94 MBSending build context to Docker daemon  19.5 MBSending build context to Docker daemon 20.05 MBSending build context to Docker daemon 20.61 MBSending build context to Docker daemon 21.17 MBSending build context to Docker daemon 21.73 MBSending build context to Docker daemon 22.28 MBSending build context to Docker daemon 22.84 MBSending build context to Docker daemon  23.4 MBSending build context to Docker daemon 23.95 MBSending build context to Docker daemon 24.51 MBSending build context to Docker daemon 25.07 MBSending build context to Docker daemon 25.62 MBSending build context to Docker daemon 26.18 MBSending build context to Docker daemon 26.74 MBSending build context to Docker daemon  27.3 MBSending build context to Docker daemon 27.85 MBSending build context to Docker daemon 28.41 MBSending build context to Docker daemon 28.97 MBSending build context to Docker daemon 29.52 MBSending build context to Docker daemon 30.08 MBSending build context to Docker daemon 30.64 MBSending build context to Docker daemon  31.2 MBSending build context to Docker daemon 31.75 MBSending build context to Docker daemon 32.31 MBSending build context to Docker daemon 32.87 MBSending build context to Docker daemon 33.42 MBSending build context to Docker daemon 33.98 MBSending build context to Docker daemon 34.54 MBSending build context to Docker daemon 35.09 MBSending build context to Docker daemon 35.65 MBSending build context to Docker daemon 36.21 MBSending build context to Docker daemon 36.77 MBSending build context to Docker daemon 37.32 MBSending build context to Docker daemon 37.88 MBSending build context to Docker daemon 38.44 MBSending build context to Docker daemon 38.99 MBSending build context to Docker daemon 39.55 MBSending build context to Docker daemon 40.11 MBSending build context to Docker daemon 40.67 MBSending build context to Docker daemon 41.22 MBSending build context to Docker daemon 41.78 MBSending build context to Docker daemon 42.34 MBSending build context to Docker daemon 42.89 MBSending build context to Docker daemon 43.45 MBSending build context to Docker daemon 44.01 MBSending build context to Docker daemon 44.56 MBSending build context to Docker daemon 45.12 MBSending build context to Docker daemon 45.68 MBSending build context to Docker daemon 46.24 MBSending build context to Docker daemon 46.79 MBSending build context to Docker daemon 47.35 MBSending build context to Docker daemon 47.91 MBSending build context to Docker daemon 48.46 MBSending build context to Docker daemon 49.02 MBSending build context to Docker daemon 49.58 MBSending build context to Docker daemon 50.14 MBSending build context to Docker daemon 50.69 MBSending build context to Docker daemon 51.25 MBSending build context to Docker daemon 51.81 MBSending build context to Docker daemon 52.36 MBSending build context to Docker daemon 52.92 MBSending build context to Docker daemon 53.48 MBSending build context to Docker daemon 54.03 MBSending build context to Docker daemon 54.59 MBSending build context to Docker daemon 55.15 MBSending build context to Docker daemon 55.71 MBSending build context to Docker daemon 56.26 MBSending build context to Docker daemon 56.82 MBSending build context to Docker daemon 57.38 MBSending build context to Docker daemon 57.93 MBSending build context to Docker daemon 58.49 MBSending build context to Docker daemon 59.05 MBSending build context to Docker daemon  59.6 MBSending build context to Docker daemon 60.16 MBSending build context to Docker daemon 60.72 MBSending build context to Docker daemon 61.28 MBSending build context to Docker daemon 61.83 MBSending build context to Docker daemon 62.39 MBSending build context to Docker daemon 62.95 MBSending build context to Docker daemon  63.5 MBSending build context to Docker daemon 64.06 MBSending build context to Docker daemon 64.62 MBSending build context to Docker daemon 65.18 MBSending build context to Docker daemon 65.73 MBSending build context to Docker daemon 66.29 MBSending build context to Docker daemon 66.85 MBSending build context to Docker daemon  67.4 MBSending build context to Docker daemon 67.96 MBSending build context to Docker daemon 68.52 MBSending build context to Docker daemon 69.07 MBSending build context to Docker daemon 69.63 MBSending build context to Docker daemon 70.19 MBSending build context to Docker daemon 70.75 MBSending build context to Docker daemon  71.3 MBSending build context to Docker daemon 71.86 MBSending build context to Docker daemon 72.42 MBSending build context to Docker daemon 72.72 MB
Sending build context to Docker daemon 
Step 0 : FROM golang:1.3
 ---> ef701a3b8b5a
Step 1 : MAINTAINER Brian Tiger Chow <btc@perfmode.com>
 ---> Using cache
 ---> 0c4f44fbbdcd
Step 2 : COPY . /go/src/github.com/jbenet/go-ipfs
 ---> bfc8ccec5015
Removing intermediate container 9ea4515fee40
Step 3 : RUN cd /go/src/github.com/jbenet/go-ipfs/cmd/ipfs && go install
 ---> Running in 70591ddb4b96
 ---> 57c89f98446f
Removing intermediate container 70591ddb4b96
Step 4 : EXPOSE 4001 5001 4002/udp
 ---> Running in 54242d6424c4
 ---> 8088c09cca44
Removing intermediate container 54242d6424c4
Step 5 : ENTRYPOINT ipfs
 ---> Running in 93f271cc2f21
 ---> 45f132b9a228
Removing intermediate container 93f271cc2f21
Step 6 : CMD daemon --init
 ---> Running in 0a2da80ee8ba
 ---> 70c89f91c417
Removing intermediate container 0a2da80ee8ba
Successfully built 70c89f91c417
docker images | grep ipfs-test-latest
ipfs-test-latest       latest              70c89f91c417        2 seconds ago       560.3 MB
cp Makefile ./data/filetiny # simple
go build -o ./bin/random ../Godeps/_workspace/src/github.com/jbenet/go-random/random
./bin/random 50000000 > ./data/filerand
./run-test-on-img.sh ipfs-test-latest
using docker image: 70c89f91c417 (ipfs-test-latest)
docker tag -f 70c89f91c417 zaqwsx_ipfs-test-img
fig build --no-cache
 ---> 70c89f91c417
Step 1 : RUN ipfs init -b=1024
 ---> Running in c17fee2a24af
initializing ipfs node at /root/.go-ipfs
generating key pair...done
peer identity: QmXqL5t34yJdkg8exZW4niC3Zuc9o3urZdqVtZM8qZ7pFv

to get started, enter: ipfs cat QmYpv2VEsxzTTXRYX3PjDg961cnJE3kY1YDXLycHGQ3zZB
 ---> aea228d86d9c
Removing intermediate container c17fee2a24af
Step 2 : ADD . /tmp/id
 ---> 76d77579689d
Removing intermediate container 6f0f3ee6bdc0
Step 3 : RUN mv -f /tmp/id/config /root/.go-ipfs/config
 ---> Running in 1c8febaa05cd
 ---> 68800cc38f72
Removing intermediate container 1c8febaa05cd
Step 4 : RUN ipfs id
 ---> Running in b6131f7c1485
{
	"ID": "QmNXuBh8HFsWq68Fid8dMbGNQTh7eG6hV9rr1fQyfmfomE",
	"PublicKey": "",
	"Addresses": null,
	"AgentVersion": "",
	"ProtocolVersion": ""
 ---> 3cceb33e88e0
Removing intermediate container b6131f7c1485
Step 5 : ENV IPFS_LOGGING_FMT nocolor
 ---> Running in e83189924a75
 ---> 8278c150a691
Removing intermediate container e83189924a75
Step 6 : EXPOSE 4011 4012/udp
 ---> Running in 0515b35f4492
 ---> 397f3b830710
Removing intermediate container 0515b35f4492
Successfully built 397f3b830710
 ---> 8eaa4ff06b53
Step 1 : ADD filetiny /data/filetiny
 ---> c7ce262e1cb7
Removing intermediate container 1d9b615ac915
Step 2 : ADD filerand /data/filerand
 ---> 60a18d9b8266
Removing intermediate container 9d0f5e10be9a
Step 3 : VOLUME /data
 ---> Running in 01e3a28f5033
 ---> 59bd2e14c179
Removing intermediate container 01e3a28f5033
Successfully built 59bd2e14c179
 ---> 70c89f91c417
Step 1 : RUN ipfs init -b=1024
 ---> Running in e6938c0e90b7
initializing ipfs node at /root/.go-ipfs
generating key pair...done
peer identity: QmZ11XU1pSdevCa1DV4sh8bcv84L9R7DrkXzPYrZX2B251

to get started, enter: ipfs cat QmYpv2VEsxzTTXRYX3PjDg961cnJE3kY1YDXLycHGQ3zZB
 ---> 67da4add8c24
Removing intermediate container e6938c0e90b7
Step 2 : ADD . /tmp/test
 ---> f912818a06fa
Removing intermediate container 4ef490255c95
Step 3 : RUN mv -f /tmp/test/config /root/.go-ipfs/config
 ---> Running in 835e0d7c8861
 ---> cc1ed16f53e2
Removing intermediate container 835e0d7c8861
Step 4 : RUN ipfs id
 ---> Running in da100a80dfd8
{
	"ID": "Qmbtc2C7rqmAfdeMTM7FX4YF8CeBumMCfk5Z1GBCMbMTfY",
	"PublicKey": "",
	"Addresses": null,
	"AgentVersion": "",
	"ProtocolVersion": ""
 ---> 93e2886c4f01
Removing intermediate container da100a80dfd8
Step 5 : RUN chmod +x /tmp/test/run.sh
 ---> Running in dbd6af54a816
 ---> 705e6709163b
Removing intermediate container dbd6af54a816
Step 6 : EXPOSE 4021 4022/udp
 ---> Running in eb3db642dcc4
 ---> 523b0fb32db3
Removing intermediate container eb3db642dcc4
Step 7 : ENV IPFS_LOGGING_FMT nocolor
 ---> Running in d1281509e16b
 ---> 9fcd2085cb1e
Removing intermediate container d1281509e16b
Step 8 : ENTRYPOINT /bin/bash
 ---> Running in 5f3a301ca212
 ---> 622e704c15bb
Removing intermediate container 5f3a301ca212
Step 9 : CMD /tmp/test/run.sh
 ---> Running in 078b877b821e
 ---> f190a2025723
Removing intermediate container 078b877b821e
Successfully built f190a2025723
 ---> 70c89f91c417
Step 1 : RUN ipfs init -b=1024
 ---> Running in ae3fd95a78da
initializing ipfs node at /root/.go-ipfs
generating key pair...done
peer identity: QmZDmNHam4pzrZ7BhR191ppkLNmAHKhvyAjYTsGVGs2kxs

to get started, enter: ipfs cat QmYpv2VEsxzTTXRYX3PjDg961cnJE3kY1YDXLycHGQ3zZB
 ---> 305e22f21312
Removing intermediate container ae3fd95a78da
Step 2 : ADD . /tmp/id
 ---> 0ea88eb3f2be
Removing intermediate container 64507494dc28
Step 3 : RUN mv -f /tmp/id/config /root/.go-ipfs/config
 ---> Running in ee3b837d06bb
 ---> 201bdb4427b1
Removing intermediate container ee3b837d06bb
Step 4 : RUN ipfs id
 ---> Running in 37c697533022
{
	"ID": "Qmbtc35vdjVh5o9w2AaT2SgcWwigsaoZUpRfq2FSrFD6mb",
	"PublicKey": "",
	"Addresses": null,
	"AgentVersion": "",
	"ProtocolVersion": ""
 ---> 8e3dd42a1004
Removing intermediate container 37c697533022
Step 5 : EXPOSE 4031 4032/udp
 ---> Running in c5cb5f7cf337
 ---> 4c0e762d91b5
Removing intermediate container c5cb5f7cf337
Step 6 : ENV IPFS_LOGGING_FMT nocolor
 ---> Running in 9ab52b0d8495
 ---> e32e521c2559
Removing intermediate container 9ab52b0d8495
Step 7 : ENTRYPOINT /bin/bash
 ---> Running in 4fa1efa1b052
 ---> e5c220f7000a
Removing intermediate container 4fa1efa1b052
Step 8 : CMD /tmp/id/run.sh
 ---> Running in 79b0cca9448f
 ---> 3b5f4cdf041d
Removing intermediate container 79b0cca9448f
Successfully built 3b5f4cdf041d
fig up --no-color | tee build/fig.log
Attaching to dockertest_bootstrap_1, dockertest_data_1, dockertest_server_1, dockertest_client_1
bootstrap_1 | 2015-01-03 15:19:35.811661 INFO updates updates.go:94: go-ipfs Version: 0.1.7
bootstrap_1 | 2015-01-03 15:19:35.840618 DEBUG cmd/ipfs prefixlog.go:107: config path is /root/.go-ipfs
bootstrap_1 | 2015-01-03 15:19:35.841357 INFO cmd/ipfs prefixlog.go:116: looking for running daemon...
bootstrap_1 | 2015-01-03 15:19:35.841559 DEBUG cmd/ipfs prefixlog.go:107: Calling pre-command hooks...
bootstrap_1 | 2015-01-03 15:19:35.841593 DEBUG cmd/ipfs prefixlog.go:107: Calling hook: Configure Event Logger
bootstrap_1 | 2015-01-03 15:19:35.841932 INFO cmd/ipfs prefixlog.go:116: Executing command locally
bootstrap_1 | 2015-01-03 15:19:35.962042 INFO conn prefixlog.go:116: swarm listening on /ip6/::/tcp/4011
bootstrap_1 | 2015-01-03 15:19:35.963669 INFO conn prefixlog.go:116: swarm listening on /ip6/::/udp/4012/utp
bootstrap_1 | 2015-01-03 15:19:35.964523 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081f76e0 0> setting handler for protocol: /ipfs/identify (14)
bootstrap_1 | 2015-01-03 15:19:35.964595 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081f76e0 1> setting handler for protocol: /ipfs/relay (11)
bootstrap_1 | 2015-01-03 15:19:35.966130 DEBUG swarm2 prefixlog.go:107: InterfaceListenAddresses: [/ip4/172.17.2.31/tcp/4011 /ip6/fe80::42:acff:fe11:21f/tcp/4011 /ip4/172.17.2.31/udp/4012/utp /ip6/fe80::42:acff:fe11:21f/udp/4012/utp]
bootstrap_1 | 2015-01-03 15:19:35.966227 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081f76e0 2> setting handler for protocol: /ipfs/diagnostics (17)
bootstrap_1 | 2015-01-03 15:19:35.966282 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081f76e0 3> setting handler for protocol: /ipfs/dht (9)
bootstrap_1 | 2015-01-03 15:19:35.966375 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081f76e0 4> setting handler for protocol: /ipfs/bitswap (13)
bootstrap_1 | 2015-01-03 15:19:35.967203 DEBUG core prefixlog.go:107: <peer.ID QmNXuB> bootstrapping to 4 more nodes
bootstrap_1 | 2015-01-03 15:19:35.967367 ERROR core prefixlog.go:110: <peer.ID QmNXuB> bootstrap error: must bootstrap to 4 more nodes, but already connected to all candidates
bootstrap_1 | 2015-01-03 15:19:35.967430 ERROR core prefixlog.go:110: must bootstrap to 4 more nodes, but already connected to all candidates
bootstrap_1 | daemon listening on /ip4/127.0.0.1/tcp/5001
bootstrap_1 | 2015-01-03 15:19:39.241445 DEBUG conn prefixlog.go:107: newSingleConn 0xc2081f9a00: <peer.ID QmNXuB> to <peer.ID >
bootstrap_1 | 2015-01-03 15:19:39.241681 DEBUG secio prefixlog.go:107: handshake: <peer.ID QmNXuB> <--start--> <peer.ID >
bootstrap_1 | 2015-01-03 15:19:39.243345 DEBUG secio prefixlog.go:107: 1.1 Identify: <peer.ID QmNXuB> Remote Peer Identified as <peer.ID Qmbtc2>
bootstrap_1 | 2015-01-03 15:19:39.262517 DEBUG secio prefixlog.go:107: handshake: <peer.ID QmNXuB> <--finish--> <peer.ID Qmbtc2>
bootstrap_1 | 2015-01-03 15:19:39.262955 DEBUG conn prefixlog.go:107: newSecureConn: <peer.ID QmNXuB> to <peer.ID Qmbtc2> handshake success!
bootstrap_1 | 2015-01-03 15:19:39.266513 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/identify
bootstrap_1 | 2015-01-03 15:19:39.267399 DEBUG swarm2 prefixlog.go:107: InterfaceListenAddresses: [/ip4/172.17.2.31/tcp/4011 /ip6/fe80::42:acff:fe11:21f/tcp/4011 /ip4/172.17.2.31/udp/4012/utp /ip6/fe80::42:acff:fe11:21f/udp/4012/utp]
bootstrap_1 | 2015-01-03 15:19:39.268131 DEBUG net/identify prefixlog.go:107: <peer.ID QmNXuB> sent listen addrs to <peer.ID Qmbtc2>: [/ip4/172.17.2.31/tcp/4011 /ip6/fe80::42:acff:fe11:21f/tcp/4011 /ip4/172.17.2.31/udp/4012/utp /ip6/fe80::42:acff:fe11:21f/udp/4012/utp]
bootstrap_1 | 2015-01-03 15:19:39.268586 DEBUG net/identify prefixlog.go:107: /ipfs/identify sent message to <peer.ID Qmbtc2> /ip4/172.17.2.33/tcp/56927
bootstrap_1 | 2015-01-03 15:19:39.276286 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/dht
bootstrap_1 | 2015-01-03 15:19:39.276293 DEBUG net/identify prefixlog.go:107: <peer.ID QmNXuB> received listen addrs for <peer.ID Qmbtc2>: [/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp]
bootstrap_1 | 2015-01-03 15:19:39.276416 DEBUG net/identify prefixlog.go:107: /ipfs/identify received message from <peer.ID Qmbtc2> /ip4/172.17.2.33/tcp/56927
bootstrap_1 | 2015-01-03 15:19:39.276824 DEBUG dht prefixlog.go:107: <peer.ID QmNXuB> Responding to ping from <peer.ID Qmbtc2>!
client_1    | 2015-01-03 15:19:39.654552 INFO updates updates.go:94: go-ipfs Version: 0.1.7
client_1    | 2015-01-03 15:19:39.704474 DEBUG cmd/ipfs prefixlog.go:107: config path is /root/.go-ipfs
client_1    | 2015-01-03 15:19:39.705145 INFO cmd/ipfs prefixlog.go:116: looking for running daemon...
client_1    | 2015-01-03 15:19:39.705451 DEBUG cmd/ipfs prefixlog.go:107: Calling pre-command hooks...
client_1    | 2015-01-03 15:19:39.705518 DEBUG cmd/ipfs prefixlog.go:107: Calling hook: Check for updates
client_1    | 2015-01-03 15:19:39.705966 INFO updates updates.go:207: checking for update
server_1    | 2015-01-03 15:19:38.433686 INFO updates updates.go:94: go-ipfs Version: 0.1.7
server_1    | 2015-01-03 15:19:38.462700 DEBUG cmd/ipfs prefixlog.go:107: config path is /root/.go-ipfs
server_1    | 2015-01-03 15:19:38.463615 INFO cmd/ipfs prefixlog.go:116: looking for running daemon...
server_1    | 2015-01-03 15:19:38.463809 DEBUG cmd/ipfs prefixlog.go:107: Calling pre-command hooks...
server_1    | 2015-01-03 15:19:38.463874 DEBUG cmd/ipfs prefixlog.go:107: Calling hook: Check for updates
server_1    | 2015-01-03 15:19:38.464474 INFO updates updates.go:207: checking for update
server_1    | 2015-01-03 15:19:39.128436 NOTICE updates updates.go:211: No update available, checked on 2015-01-03 15:19:39.128426414 +0000 UTC
server_1    | 2015-01-03 15:19:39.129359 DEBUG cmd/ipfs prefixlog.go:107: Calling hook: Configure Event Logger
server_1    | 2015-01-03 15:19:39.129436 INFO cmd/ipfs prefixlog.go:116: Executing command locally
server_1    | added /ip4/172.17.2.31/tcp/4011/QmNXuBh8HFsWq68Fid8dMbGNQTh7eG6hV9rr1fQyfmfomE
server_1    | dockertest> starting server daemon
server_1    | 2015-01-03 15:19:39.144083 INFO updates updates.go:94: go-ipfs Version: 0.1.7
server_1    | 2015-01-03 15:19:39.175154 DEBUG cmd/ipfs prefixlog.go:107: config path is /root/.go-ipfs
server_1    | 2015-01-03 15:19:39.175824 INFO cmd/ipfs prefixlog.go:116: looking for running daemon...
server_1    | 2015-01-03 15:19:39.175988 DEBUG cmd/ipfs prefixlog.go:107: Calling pre-command hooks...
server_1    | 2015-01-03 15:19:39.176076 DEBUG cmd/ipfs prefixlog.go:107: Calling hook: Configure Event Logger
server_1    | 2015-01-03 15:19:39.176364 INFO cmd/ipfs prefixlog.go:116: Executing command locally
server_1    | 2015-01-03 15:19:39.234620 INFO conn prefixlog.go:116: swarm listening on /ip6/::/tcp/4021
server_1    | 2015-01-03 15:19:39.235200 INFO conn prefixlog.go:116: swarm listening on /ip6/::/udp/4022/utp
server_1    | 2015-01-03 15:19:39.236084 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081e6dd0 0> setting handler for protocol: /ipfs/identify (14)
server_1    | 2015-01-03 15:19:39.236162 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081e6dd0 1> setting handler for protocol: /ipfs/relay (11)
server_1    | 2015-01-03 15:19:39.237208 DEBUG swarm2 prefixlog.go:107: InterfaceListenAddresses: [/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp]
server_1    | 2015-01-03 15:19:39.237381 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081e6dd0 2> setting handler for protocol: /ipfs/diagnostics (17)
server_1    | 2015-01-03 15:19:39.237658 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081e6dd0 3> setting handler for protocol: /ipfs/dht (9)
server_1    | 2015-01-03 15:19:39.238012 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081e6dd0 4> setting handler for protocol: /ipfs/bitswap (13)
server_1    | daemon listening on /ip4/127.0.0.1/tcp/5001
server_1    | 2015-01-03 15:19:39.238685 DEBUG core prefixlog.go:107: <peer.ID Qmbtc2> bootstrapping to 4 more nodes
server_1    | 2015-01-03 15:19:39.239161 DEBUG core prefixlog.go:107: <peer.ID Qmbtc2> bootstrapping to 4 nodes: [{<peer.ID QmNXuB> [/ip4/172.17.2.31/tcp/4011]}]
server_1    | 2015-01-03 15:19:39.239561 DEBUG core prefixlog.go:107: <peer.ID Qmbtc2> bootstrapping to <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:39.239634 DEBUG p2p/host/basic prefixlog.go:107: host %!s(func() peer.ID=0x657cb0) dialing <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:39.239764 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc2>] network dialing peer [<peer.ID QmNXuB>]
server_1    | 2015-01-03 15:19:39.239852 DEBUG conn prefixlog.go:107: <peer.ID Qmbtc2> dialing <peer.ID QmNXuB> /ip4/172.17.2.31/tcp/4011
server_1    | 2015-01-03 15:19:39.241146 DEBUG conn prefixlog.go:107: newSingleConn 0xc20820a940: <peer.ID Qmbtc2> to <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:39.241353 DEBUG secio prefixlog.go:107: handshake: <peer.ID Qmbtc2> <--start--> <peer.ID >
server_1    | 2015-01-03 15:19:39.243111 DEBUG secio prefixlog.go:107: 1.1 Identify: <peer.ID Qmbtc2> Remote Peer Identified as <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:39.262558 DEBUG secio prefixlog.go:107: handshake: <peer.ID Qmbtc2> <--finish--> <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:39.263113 DEBUG conn prefixlog.go:107: newSecureConn: <peer.ID Qmbtc2> to <peer.ID QmNXuB> handshake success!
server_1    | 2015-01-03 15:19:39.264788 DEBUG swarm2 prefixlog.go:107: network for <peer.ID Qmbtc2> finished dialing <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:39.264917 DEBUG net/identify prefixlog.go:107: IdentifyConn called twice on: <SwarmConn <peer.ID Qmbtc2> (/ip4/172.17.2.33/tcp/56927) <-- secureConn 0xc2082b7590 --> (/ip4/172.17.2.31/tcp/4011) <peer.ID QmNXuB>>
server_1    | 2015-01-03 15:19:39.268854 DEBUG net/identify prefixlog.go:107: <peer.ID Qmbtc2> received listen addrs for <peer.ID QmNXuB>: [/ip4/172.17.2.31/tcp/4011 /ip6/fe80::42:acff:fe11:21f/tcp/4011 /ip4/172.17.2.31/udp/4012/utp /ip6/fe80::42:acff:fe11:21f/udp/4012/utp]
server_1    | 2015-01-03 15:19:39.269664 DEBUG net/identify prefixlog.go:107: /ipfs/identify received message from <peer.ID QmNXuB> /ip4/172.17.2.31/tcp/4011
server_1    | 2015-01-03 15:19:39.270029 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/identify
server_1    | 2015-01-03 15:19:39.270462 DEBUG swarm2 prefixlog.go:107: InterfaceListenAddresses: [/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp]
server_1    | 2015-01-03 15:19:39.270723 DEBUG net/identify prefixlog.go:107: <peer.ID Qmbtc2> sent listen addrs to <peer.ID QmNXuB>: [/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp]
server_1    | 2015-01-03 15:19:39.270871 DEBUG p2p/host/basic prefixlog.go:107: host %!s(func() peer.ID=0x657cb0) finished dialing <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:39.270972 DEBUG dht prefixlog.go:107: ping <peer.ID QmNXuB> start
server_1    | 2015-01-03 15:19:39.271024 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc2> dht starting stream
server_1    | 2015-01-03 15:19:39.271064 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc2>] network opening stream to peer [<peer.ID QmNXuB>]
server_1    | 2015-01-03 15:19:39.271195 DEBUG swarm2 prefixlog.go:107: Swarm: NewStreamWithPeer...
server_1    | 2015-01-03 15:19:39.271711 DEBUG net/identify prefixlog.go:107: /ipfs/identify sent message to <peer.ID QmNXuB> /ip4/172.17.2.31/tcp/4011
server_1    | 2015-01-03 15:19:39.279302 DEBUG dht prefixlog.go:107: ping <peer.ID QmNXuB> end (err = %!s(<nil>))
server_1    | 2015-01-03 15:19:39.279763 INFO core prefixlog.go:116: bootstrapped with <peer.ID QmNXuB>
client_1    | 2015-01-03 15:19:40.411000 NOTICE updates updates.go:211: No update available, checked on 2015-01-03 15:19:40.410989701 +0000 UTC
client_1    | 2015-01-03 15:19:40.411411 DEBUG cmd/ipfs prefixlog.go:107: Calling hook: Configure Event Logger
client_1    | 2015-01-03 15:19:40.411503 INFO cmd/ipfs prefixlog.go:116: Executing command locally
client_1    | added /ip4/172.17.2.31/tcp/4011/QmNXuBh8HFsWq68Fid8dMbGNQTh7eG6hV9rr1fQyfmfomE
client_1    | dockertest> starting client daemon
client_1    | 2015-01-03 15:19:40.431027 INFO updates updates.go:94: go-ipfs Version: 0.1.7
client_1    | 2015-01-03 15:19:40.464158 DEBUG cmd/ipfs prefixlog.go:107: config path is /root/.go-ipfs
client_1    | 2015-01-03 15:19:40.464737 INFO cmd/ipfs prefixlog.go:116: looking for running daemon...
client_1    | 2015-01-03 15:19:40.464906 DEBUG cmd/ipfs prefixlog.go:107: Calling pre-command hooks...
client_1    | 2015-01-03 15:19:40.464977 DEBUG cmd/ipfs prefixlog.go:107: Calling hook: Configure Event Logger
client_1    | 2015-01-03 15:19:40.465312 INFO cmd/ipfs prefixlog.go:116: Executing command locally
client_1    | 2015-01-03 15:19:40.515544 INFO conn prefixlog.go:116: swarm listening on /ip6/::/tcp/4031
client_1    | 2015-01-03 15:19:40.516335 INFO conn prefixlog.go:116: swarm listening on /ip6/::/udp/4032/utp
client_1    | 2015-01-03 15:19:40.517314 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081f93c0 0> setting handler for protocol: /ipfs/identify (14)
client_1    | 2015-01-03 15:19:40.517555 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081f93c0 1> setting handler for protocol: /ipfs/relay (11)
client_1    | 2015-01-03 15:19:40.518004 DEBUG swarm2 prefixlog.go:107: InterfaceListenAddresses: [/ip4/172.17.2.34/tcp/4031 /ip6/fe80::42:acff:fe11:222/tcp/4031 /ip4/172.17.2.34/udp/4032/utp /ip6/fe80::42:acff:fe11:222/udp/4032/utp]
client_1    | 2015-01-03 15:19:40.518060 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081f93c0 2> setting handler for protocol: /ipfs/diagnostics (17)
client_1    | 2015-01-03 15:19:40.518182 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081f93c0 3> setting handler for protocol: /ipfs/dht (9)
client_1    | 2015-01-03 15:19:40.518289 DEBUG net/mux prefixlog.go:107: <Muxer 0xc2081f93c0 4> setting handler for protocol: /ipfs/bitswap (13)
client_1    | 2015-01-03 15:19:40.521519 DEBUG core prefixlog.go:107: <peer.ID Qmbtc3> bootstrapping to 4 more nodes
client_1    | daemon listening on /ip4/127.0.0.1/tcp/5001
client_1    | 2015-01-03 15:19:40.521766 DEBUG core prefixlog.go:107: <peer.ID Qmbtc3> bootstrapping to 4 nodes: [{<peer.ID QmNXuB> [/ip4/172.17.2.31/tcp/4011]}]
client_1    | 2015-01-03 15:19:40.522204 DEBUG core prefixlog.go:107: <peer.ID Qmbtc3> bootstrapping to <peer.ID QmNXuB>
client_1    | 2015-01-03 15:19:40.522315 DEBUG p2p/host/basic prefixlog.go:107: host %!s(func() peer.ID=0x657cb0) dialing <peer.ID QmNXuB>
client_1    | 2015-01-03 15:19:40.522460 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc3>] network dialing peer [<peer.ID QmNXuB>]
client_1    | 2015-01-03 15:19:40.523280 DEBUG conn prefixlog.go:107: <peer.ID Qmbtc3> dialing <peer.ID QmNXuB> /ip4/172.17.2.31/tcp/4011
bootstrap_1 | 2015-01-03 15:19:40.526989 DEBUG conn prefixlog.go:107: newSingleConn 0xc208226bc0: <peer.ID QmNXuB> to <peer.ID >
bootstrap_1 | 2015-01-03 15:19:40.527218 DEBUG secio prefixlog.go:107: handshake: <peer.ID QmNXuB> <--start--> <peer.ID >
client_1    | 2015-01-03 15:19:40.527000 DEBUG conn prefixlog.go:107: newSingleConn 0xc2081fd780: <peer.ID Qmbtc3> to <peer.ID QmNXuB>
client_1    | 2015-01-03 15:19:40.527276 DEBUG secio prefixlog.go:107: handshake: <peer.ID Qmbtc3> <--start--> <peer.ID >
client_1    | 2015-01-03 15:19:40.527982 DEBUG secio prefixlog.go:107: 1.1 Identify: <peer.ID Qmbtc3> Remote Peer Identified as <peer.ID QmNXuB>
bootstrap_1 | 2015-01-03 15:19:40.530741 DEBUG secio prefixlog.go:107: 1.1 Identify: <peer.ID QmNXuB> Remote Peer Identified as <peer.ID Qmbtc3>
client_1    | 2015-01-03 15:19:40.544623 DEBUG secio prefixlog.go:107: handshake: <peer.ID Qmbtc3> <--finish--> <peer.ID QmNXuB>
bootstrap_1 | 2015-01-03 15:19:40.544813 DEBUG secio prefixlog.go:107: handshake: <peer.ID QmNXuB> <--finish--> <peer.ID Qmbtc3>
client_1    | 2015-01-03 15:19:40.545169 DEBUG conn prefixlog.go:107: newSecureConn: <peer.ID Qmbtc3> to <peer.ID QmNXuB> handshake success!
bootstrap_1 | 2015-01-03 15:19:40.545478 DEBUG conn prefixlog.go:107: newSecureConn: <peer.ID QmNXuB> to <peer.ID Qmbtc3> handshake success!
client_1    | 2015-01-03 15:19:40.548239 DEBUG swarm2 prefixlog.go:107: network for <peer.ID Qmbtc3> finished dialing <peer.ID QmNXuB>
client_1    | 2015-01-03 15:19:40.548589 DEBUG net/identify prefixlog.go:107: IdentifyConn called twice on: <SwarmConn <peer.ID Qmbtc3> (/ip4/172.17.2.34/tcp/33638) <-- secureConn 0xc2082c5530 --> (/ip4/172.17.2.31/tcp/4011) <peer.ID QmNXuB>>
bootstrap_1 | 2015-01-03 15:19:40.549519 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/identify
bootstrap_1 | 2015-01-03 15:19:40.549970 DEBUG swarm2 prefixlog.go:107: InterfaceListenAddresses: [/ip4/172.17.2.31/udp/4012/utp /ip6/fe80::42:acff:fe11:21f/udp/4012/utp /ip4/172.17.2.31/tcp/4011 /ip6/fe80::42:acff:fe11:21f/tcp/4011]
bootstrap_1 | 2015-01-03 15:19:40.550254 DEBUG net/identify prefixlog.go:107: <peer.ID QmNXuB> sent listen addrs to <peer.ID Qmbtc3>: [/ip4/172.17.2.31/udp/4012/utp /ip6/fe80::42:acff:fe11:21f/udp/4012/utp /ip4/172.17.2.31/tcp/4011 /ip6/fe80::42:acff:fe11:21f/tcp/4011]
bootstrap_1 | 2015-01-03 15:19:40.551358 DEBUG net/identify prefixlog.go:107: /ipfs/identify sent message to <peer.ID Qmbtc3> /ip4/172.17.2.34/tcp/33638
client_1    | 2015-01-03 15:19:40.556199 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/identify
client_1    | 2015-01-03 15:19:40.556542 DEBUG net/identify prefixlog.go:107: <peer.ID Qmbtc3> received listen addrs for <peer.ID QmNXuB>: [/ip4/172.17.2.31/udp/4012/utp /ip6/fe80::42:acff:fe11:21f/udp/4012/utp /ip4/172.17.2.31/tcp/4011 /ip6/fe80::42:acff:fe11:21f/tcp/4011]
client_1    | 2015-01-03 15:19:40.556751 DEBUG net/identify prefixlog.go:107: /ipfs/identify received message from <peer.ID QmNXuB> /ip4/172.17.2.31/tcp/4011
client_1    | 2015-01-03 15:19:40.557053 DEBUG swarm2 prefixlog.go:107: InterfaceListenAddresses: [/ip4/172.17.2.34/tcp/4031 /ip6/fe80::42:acff:fe11:222/tcp/4031 /ip4/172.17.2.34/udp/4032/utp /ip6/fe80::42:acff:fe11:222/udp/4032/utp]
client_1    | 2015-01-03 15:19:40.557018 DEBUG p2p/host/basic prefixlog.go:107: host %!s(func() peer.ID=0x657cb0) finished dialing <peer.ID QmNXuB>
client_1    | 2015-01-03 15:19:40.557343 DEBUG dht prefixlog.go:107: ping <peer.ID QmNXuB> start
client_1    | 2015-01-03 15:19:40.557331 DEBUG net/identify prefixlog.go:107: <peer.ID Qmbtc3> sent listen addrs to <peer.ID QmNXuB>: [/ip4/172.17.2.34/tcp/4031 /ip6/fe80::42:acff:fe11:222/tcp/4031 /ip4/172.17.2.34/udp/4032/utp /ip6/fe80::42:acff:fe11:222/udp/4032/utp]
client_1    | 2015-01-03 15:19:40.557410 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc3> dht starting stream
client_1    | 2015-01-03 15:19:40.557464 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc3>] network opening stream to peer [<peer.ID QmNXuB>]
client_1    | 2015-01-03 15:19:40.557572 DEBUG swarm2 prefixlog.go:107: Swarm: NewStreamWithPeer...
client_1    | 2015-01-03 15:19:40.557893 DEBUG net/identify prefixlog.go:107: /ipfs/identify sent message to <peer.ID QmNXuB> /ip4/172.17.2.31/tcp/4011
bootstrap_1 | 2015-01-03 15:19:40.558788 DEBUG net/identify prefixlog.go:107: <peer.ID QmNXuB> received listen addrs for <peer.ID Qmbtc3>: [/ip4/172.17.2.34/tcp/4031 /ip6/fe80::42:acff:fe11:222/tcp/4031 /ip4/172.17.2.34/udp/4032/utp /ip6/fe80::42:acff:fe11:222/udp/4032/utp]
bootstrap_1 | 2015-01-03 15:19:40.560031 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/dht
bootstrap_1 | 2015-01-03 15:19:40.560818 DEBUG dht prefixlog.go:107: <peer.ID QmNXuB> Responding to ping from <peer.ID Qmbtc3>!
bootstrap_1 | 2015-01-03 15:19:40.560211 DEBUG net/identify prefixlog.go:107: /ipfs/identify received message from <peer.ID Qmbtc3> /ip4/172.17.2.34/tcp/33638
client_1    | 2015-01-03 15:19:40.564326 DEBUG dht prefixlog.go:107: ping <peer.ID QmNXuB> end (err = %!s(<nil>))
client_1    | 2015-01-03 15:19:40.565879 INFO core prefixlog.go:116: bootstrapped with <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:42.150155 INFO updates updates.go:94: go-ipfs Version: 0.1.7
server_1    | 2015-01-03 15:19:42.180760 DEBUG cmd/ipfs prefixlog.go:107: config path is /root/.go-ipfs
server_1    | 2015-01-03 15:19:42.183190 INFO cmd/ipfs prefixlog.go:116: looking for running daemon...
server_1    | 2015-01-03 15:19:42.183532 INFO cmd/ipfs prefixlog.go:116: a daemon is running...
server_1    | 2015-01-03 15:19:42.183681 DEBUG cmd/ipfs prefixlog.go:107: Calling pre-command hooks...
server_1    | 2015-01-03 15:19:42.183773 INFO cmd/ipfs prefixlog.go:116: a daemon is running...
server_1    | 2015-01-03 15:19:42.183822 DEBUG cmd/ipfs prefixlog.go:107: Calling hook: Configure Event Logger
server_1    | 2015-01-03 15:19:42.184413 INFO cmd/ipfs prefixlog.go:116: Executing command on daemon running at /ip4/127.0.0.1/tcp/5001
server_1    | 2015-01-03 15:19:42.194825 DEBUG commands/http handler.go:43: Incoming API request: /api/v0/add?encoding=json&q=true
server_1    | 2015-01-03 15:19:42.196019 DEBUG dht prefixlog.go:107: Run query with 1 peers.
bootstrap_1 | 2015-01-03 15:19:42.208296 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/dht
server_1    | 2015-01-03 15:19:42.205328 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc2> dht starting stream
server_1    | 2015-01-03 15:19:42.206269 DEBUG dht prefixlog.go:107: adding peer to query: <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:42.206406 DEBUG dht prefixlog.go:107: spawning worker for: <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:42.206370 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc2>] network opening stream to peer [<peer.ID QmNXuB>]
server_1    | 2015-01-03 15:19:42.206535 DEBUG swarm2 prefixlog.go:107: Swarm: NewStreamWithPeer...
server_1    | 2015-01-03 15:19:42.206584 DEBUG dht prefixlog.go:107: spawned worker for: <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:42.206671 DEBUG dht prefixlog.go:107: running worker for: <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:42.206968 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc2> dht starting stream
server_1    | 2015-01-03 15:19:42.207640 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc2>] network opening stream to peer [<peer.ID QmNXuB>]
server_1    | 2015-01-03 15:19:42.207849 DEBUG swarm2 prefixlog.go:107: Swarm: NewStreamWithPeer...
server_1    | 2015-01-03 15:19:42.209103 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc2> putProvider: <peer.ID QmNXuB> for QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf ([/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp])
bootstrap_1 | 2015-01-03 15:19:42.211147 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/dht
bootstrap_1 | 2015-01-03 15:19:42.215150 DEBUG dht prefixlog.go:107: <peer.ID QmNXuB> adding <peer.ID Qmbtc2> as a provider for 'QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf'
bootstrap_1 | 2015-01-03 15:19:42.217674 INFO dht prefixlog.go:116: received provider <peer.ID Qmbtc2> for QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf (addrs: [/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp])
bootstrap_1 | 2015-01-03 15:19:42.218364 WARNING dht prefixlog.go:125: handleFindPeer: could not find anything.
server_1    | 2015-01-03 15:19:42.220891 DEBUG dht prefixlog.go:107: QUERY worker for: <peer.ID QmNXuB> - not found, and no closer peers.
server_1    | 2015-01-03 15:19:42.221157 DEBUG dht prefixlog.go:107: completing worker for: <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:42.221577 ERROR dht prefixlog.go:110: closestPeers query run error: routing: not found
server_1    | 2015-01-03 15:19:42.221898 INFO core/commands add.go:142: adding file: /data/filetiny
server_1    | dockertest> added tiny file. hash is QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf
server_1    | 2015-01-03 15:19:42.244145 INFO updates updates.go:94: go-ipfs Version: 0.1.7
server_1    | 2015-01-03 15:19:42.276702 DEBUG cmd/ipfs prefixlog.go:107: config path is /root/.go-ipfs
server_1    | 2015-01-03 15:19:42.277533 INFO cmd/ipfs prefixlog.go:116: looking for running daemon...
server_1    | 2015-01-03 15:19:42.277695 INFO cmd/ipfs prefixlog.go:116: a daemon is running...
server_1    | 2015-01-03 15:19:42.277776 DEBUG cmd/ipfs prefixlog.go:107: Calling pre-command hooks...
server_1    | 2015-01-03 15:19:42.277845 INFO cmd/ipfs prefixlog.go:116: a daemon is running...
server_1    | 2015-01-03 15:19:42.277906 DEBUG cmd/ipfs prefixlog.go:107: Calling hook: Configure Event Logger
server_1    | 2015-01-03 15:19:42.278235 INFO cmd/ipfs prefixlog.go:116: Executing command on daemon running at /ip4/127.0.0.1/tcp/5001
server_1    | 2015-01-03 15:19:42.285757 DEBUG commands/http handler.go:43: Incoming API request: /api/v0/add?encoding=json&q=true
server_1    | 2015-01-03 15:19:42.295682 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc2> dht starting stream
server_1    | 2015-01-03 15:19:42.295854 DEBUG dht prefixlog.go:107: Run query with 1 peers.
server_1    | 2015-01-03 15:19:42.295907 DEBUG dht prefixlog.go:107: adding peer to query: <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:42.295891 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc2>] network opening stream to peer [<peer.ID QmNXuB>]
server_1    | 2015-01-03 15:19:42.295994 DEBUG swarm2 prefixlog.go:107: Swarm: NewStreamWithPeer...
server_1    | 2015-01-03 15:19:42.295995 DEBUG dht prefixlog.go:107: spawning worker for: <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:42.296070 DEBUG dht prefixlog.go:107: spawned worker for: <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:42.296118 DEBUG dht prefixlog.go:107: running worker for: <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:42.296175 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc2> dht starting stream
server_1    | 2015-01-03 15:19:42.296250 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc2>] network opening stream to peer [<peer.ID QmNXuB>]
bootstrap_1 | 2015-01-03 15:19:42.308727 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/dht
bootstrap_1 | 2015-01-03 15:19:42.309533 DEBUG dht prefixlog.go:107: <peer.ID QmNXuB> adding <peer.ID Qmbtc2> as a provider for 'QmZPgWZQCCeSdYMBdwmnC9uDcjBkhrZZU8C3QgecvTh85Y'
bootstrap_1 | 2015-01-03 15:19:42.311009 INFO dht prefixlog.go:116: received provider <peer.ID Qmbtc2> for QmZPgWZQCCeSdYMBdwmnC9uDcjBkhrZZU8C3QgecvTh85Y (addrs: [/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp])
server_1    | 2015-01-03 15:19:42.307930 DEBUG swarm2 prefixlog.go:107: Swarm: NewStreamWithPeer...
server_1    | 2015-01-03 15:19:42.306188 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc2> putProvider: <peer.ID QmNXuB> for QmZPgWZQCCeSdYMBdwmnC9uDcjBkhrZZU8C3QgecvTh85Y ([/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp])
bootstrap_1 | 2015-01-03 15:19:42.320833 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/dht
bootstrap_1 | 2015-01-03 15:19:42.322264 DEBUG dht prefixlog.go:107: handleFindPeer: sending back '<peer.ID Qmbtc3>'
server_1    | 2015-01-03 15:19:42.330422 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc2> dht starting stream
server_1    | 2015-01-03 15:19:42.330371 DEBUG dht prefixlog.go:107: PEERS CLOSER -- worker for: <peer.ID QmNXuB> (1 closer peers)
server_1    | 2015-01-03 15:19:42.330601 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc2>] network opening stream to peer [<peer.ID Qmbtc3>]
server_1    | 2015-01-03 15:19:42.334798 DEBUG swarm2 prefixlog.go:107: Swarm: NewStreamWithPeer no connections. Attempting to connect...
server_1    | 2015-01-03 15:19:42.334902 DEBUG conn prefixlog.go:107: <peer.ID Qmbtc2> dialing <peer.ID Qmbtc3> /ip6/fe80::42:acff:fe11:222/tcp/4031
server_1    | 2015-01-03 15:19:42.335065 DEBUG conn prefixlog.go:107: <peer.ID Qmbtc2> dialing <peer.ID Qmbtc3> /ip4/172.17.2.34/udp/4032/utp
server_1    | 2015-01-03 15:19:42.334496 DEBUG dht prefixlog.go:107: adding peer to query: <peer.ID Qmbtc3>
client_1    | 2015-01-03 15:19:42.342807 DEBUG conn prefixlog.go:107: newSingleConn 0xc208212d40: <peer.ID Qmbtc3> to <peer.ID >
client_1    | 2015-01-03 15:19:42.344209 DEBUG secio prefixlog.go:107: handshake: <peer.ID Qmbtc3> <--start--> <peer.ID >
server_1    | 2015-01-03 15:19:42.338724 DEBUG dht prefixlog.go:107: spawning worker for: <peer.ID Qmbtc3>
server_1    | 2015-01-03 15:19:42.338889 DEBUG dht prefixlog.go:107: spawned worker for: <peer.ID Qmbtc3>
server_1    | 2015-01-03 15:19:42.338972 DEBUG dht prefixlog.go:107: running worker for: <peer.ID Qmbtc3>
server_1    | 2015-01-03 15:19:42.339348 INFO dht prefixlog.go:116: worker for: <peer.ID Qmbtc3> -- not connected. dial start
server_1    | 2015-01-03 15:19:42.339433 DEBUG p2p/host/basic prefixlog.go:107: host %!s(func() peer.ID=0x657cb0) dialing <peer.ID Qmbtc3>
server_1    | 2015-01-03 15:19:42.339577 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc2>] network dialing peer [<peer.ID Qmbtc3>]
server_1    | 2015-01-03 15:19:42.337474 DEBUG dht prefixlog.go:107: PEERS CLOSER -- worker for: <peer.ID QmNXuB> added <peer.ID Qmbtc3> ([/ip6/fe80::42:acff:fe11:222/tcp/4031 /ip4/172.17.2.34/udp/4032/utp /ip6/fe80::42:acff:fe11:222/udp/4032/utp /ip4/172.17.2.34/tcp/4031])
server_1    | 2015-01-03 15:19:42.339674 DEBUG conn prefixlog.go:107: <peer.ID Qmbtc2> dialing <peer.ID Qmbtc3> /ip6/fe80::42:acff:fe11:222/tcp/4031
server_1    | 2015-01-03 15:19:42.343926 DEBUG conn prefixlog.go:107: newSingleConn 0xc20804d3c0: <peer.ID Qmbtc2> to <peer.ID Qmbtc3>
server_1    | 2015-01-03 15:19:42.344094 DEBUG secio prefixlog.go:107: handshake: <peer.ID Qmbtc2> <--start--> <peer.ID >
server_1    | 2015-01-03 15:19:42.344086 DEBUG conn prefixlog.go:107: <peer.ID Qmbtc2> dialing <peer.ID Qmbtc3> /ip4/172.17.2.34/udp/4032/utp
server_1    | 2015-01-03 15:19:42.339802 DEBUG dht prefixlog.go:107: completing worker for: <peer.ID QmNXuB>
server_1    | 2015-01-03 15:19:42.347909 DEBUG conn prefixlog.go:107: newSingleConn 0xc20820a400: <peer.ID Qmbtc2> to <peer.ID Qmbtc3>
server_1    | 2015-01-03 15:19:42.348251 DEBUG secio prefixlog.go:107: handshake: <peer.ID Qmbtc2> <--start--> <peer.ID >
server_1    | 2015-01-03 15:19:42.355362 DEBUG secio prefixlog.go:107: 1.1 Identify: <peer.ID Qmbtc2> Remote Peer Identified as <peer.ID Qmbtc3>
client_1    | 2015-01-03 15:19:42.355727 DEBUG secio prefixlog.go:107: 1.1 Identify: <peer.ID Qmbtc3> Remote Peer Identified as <peer.ID Qmbtc2>
server_1    | 2015-01-03 15:19:42.375962 DEBUG secio prefixlog.go:107: handshake: <peer.ID Qmbtc2> <--finish--> <peer.ID Qmbtc3>
server_1    | 2015-01-03 15:19:42.376950 DEBUG conn prefixlog.go:107: newSecureConn: <peer.ID Qmbtc2> to <peer.ID Qmbtc3> handshake success!
server_1    | 2015-01-03 15:19:42.377280 DEBUG swarm2 prefixlog.go:107: Swarm: NewStreamWithPeer...
client_1    | 2015-01-03 15:19:42.377747 DEBUG secio prefixlog.go:107: handshake: <peer.ID Qmbtc3> <--finish--> <peer.ID Qmbtc2>
client_1    | 2015-01-03 15:19:42.379548 DEBUG conn prefixlog.go:107: newSecureConn: <peer.ID Qmbtc3> to <peer.ID Qmbtc2> handshake success!
client_1    | 2015-01-03 15:19:42.379834 DEBUG conn prefixlog.go:107: newSingleConn 0xc208216a40: <peer.ID Qmbtc3> to <peer.ID >
client_1    | 2015-01-03 15:19:42.379946 DEBUG secio prefixlog.go:107: handshake: <peer.ID Qmbtc3> <--start--> <peer.ID >
server_1    | 2015-01-03 15:19:42.396598 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/identify
server_1    | 2015-01-03 15:19:42.397311 DEBUG swarm2 prefixlog.go:107: InterfaceListenAddresses: [/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp]
server_1    | 2015-01-03 15:19:42.397849 DEBUG net/identify prefixlog.go:107: <peer.ID Qmbtc2> sent listen addrs to <peer.ID Qmbtc3>: [/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp]
client_1    | dockertest> client found file with hash: QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf
client_1    | 2015-01-03 15:19:43.446506 INFO updates updates.go:94: go-ipfs Version: 0.1.7
client_1    | 2015-01-03 15:19:43.479215 DEBUG cmd/ipfs prefixlog.go:107: config path is /root/.go-ipfs
client_1    | 2015-01-03 15:19:43.485848 INFO cmd/ipfs prefixlog.go:116: looking for running daemon...
client_1    | 2015-01-03 15:19:43.486249 INFO cmd/ipfs prefixlog.go:116: a daemon is running...
client_1    | 2015-01-03 15:19:43.486352 DEBUG cmd/ipfs prefixlog.go:107: Calling pre-command hooks...
client_1    | 2015-01-03 15:19:43.486427 INFO cmd/ipfs prefixlog.go:116: a daemon is running...
client_1    | 2015-01-03 15:19:43.486463 DEBUG cmd/ipfs prefixlog.go:107: Calling hook: Configure Event Logger
client_1    | 2015-01-03 15:19:43.486935 INFO cmd/ipfs prefixlog.go:116: Executing command on daemon running at /ip4/127.0.0.1/tcp/5001
client_1    | 2015-01-03 15:19:43.493213 DEBUG commands/http handler.go:43: Incoming API request: /api/v0/cat?arg=QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf&encoding=json
client_1    | 2015-01-03 15:19:43.493436 DEBUG path path.go:26: Resolve: 'QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf'
client_1    | 2015-01-03 15:19:43.493564 DEBUG path path.go:48: Resolve dag get.
client_1    | 2015-01-03 15:19:43.493661 DEBUG blockservice blockservice.go:65: BlockService GetBlock: 'QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf'
client_1    | 2015-01-03 15:19:43.493830 DEBUG blockservice blockservice.go:72: Blockservice: Searching bitswap.
client_1    | 2015-01-03 15:19:43.494168 DEBUG bitswap prefixlog.go:107: bitswap(<peer.ID Qmbtc3>).GetBlock(QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf) GetBlockRequestBegin
client_1    | 2015-01-03 15:19:43.498138 DEBUG bitswap prefixlog.go:107: bitswap(<peer.ID Qmbtc3>).sendWantlistMsgToPeers(1) begin
client_1    | 2015-01-03 15:19:43.499383 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc3> FindProviders QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf
client_1    | 2015-01-03 15:19:43.499954 DEBUG dht prefixlog.go:107: Run query with 1 peers.
client_1    | 2015-01-03 15:19:43.499987 DEBUG dht prefixlog.go:107: adding peer to query: <peer.ID QmNXuB>
client_1    | 2015-01-03 15:19:43.500163 DEBUG dht prefixlog.go:107: spawning worker for: <peer.ID QmNXuB>
client_1    | 2015-01-03 15:19:43.500231 DEBUG dht prefixlog.go:107: spawned worker for: <peer.ID QmNXuB>
client_1    | 2015-01-03 15:19:43.500301 DEBUG dht prefixlog.go:107: running worker for: <peer.ID QmNXuB>
client_1    | 2015-01-03 15:19:43.500523 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc3> findProviders(QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf).Query(<peer.ID QmNXuB>):  begin
client_1    | 2015-01-03 15:19:43.500560 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc3> dht starting stream
client_1    | 2015-01-03 15:19:43.500613 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc3>] network opening stream to peer [<peer.ID QmNXuB>]
client_1    | 2015-01-03 15:19:43.500893 DEBUG swarm2 prefixlog.go:107: Swarm: NewStreamWithPeer...
bootstrap_1 | 2015-01-03 15:19:43.507582 INFO net/mux prefixlog.go:116: muxer handle protocol: /ipfs/dht
bootstrap_1 | 2015-01-03 15:19:43.509622 DEBUG dht prefixlog.go:107: <peer.ID QmNXuB> handleGetProviders(<peer.ID Qmbtc3>, QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf):  begin
bootstrap_1 | 2015-01-03 15:19:43.509967 DEBUG dht prefixlog.go:107: <peer.ID QmNXuB> handleGetProviders(<peer.ID Qmbtc3>, QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf):  have 1 providers: [{<peer.ID Qmbtc2> [/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp]}]
bootstrap_1 | 2015-01-03 15:19:43.510574 DEBUG dht prefixlog.go:107: <peer.ID QmNXuB> handleGetProviders(<peer.ID Qmbtc3>, QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf):  end
client_1    | 2015-01-03 15:19:43.518277 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc3> findProviders(QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf).Query(<peer.ID QmNXuB>):  got 1 provider entries
client_1    | 2015-01-03 15:19:43.518455 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc3> findProviders(QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf).Query(<peer.ID QmNXuB>):  got 1 provider entries decoded
client_1    | 2015-01-03 15:19:43.518567 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc3> findProviders(QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf).Query(<peer.ID QmNXuB>):  got provider: {<peer.ID Qmbtc2> [/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp]}
client_1    | 2015-01-03 15:19:43.519937 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc3> findProviders(QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf).Query(<peer.ID QmNXuB>):  using provider: {<peer.ID Qmbtc2> [/ip4/172.17.2.33/tcp/4021 /ip6/fe80::42:acff:fe11:221/tcp/4021 /ip4/172.17.2.33/udp/4022/utp /ip6/fe80::42:acff:fe11:221/udp/4022/utp]}
client_1    | 2015-01-03 15:19:43.520478 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc3> findProviders(QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf).Query(<peer.ID QmNXuB>):  got closer peers: []
client_1    | 2015-01-03 15:19:43.520582 DEBUG dht prefixlog.go:107: <peer.ID Qmbtc3> findProviders(QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf).Query(<peer.ID QmNXuB>):  end
client_1    | 2015-01-03 15:19:43.520608 DEBUG dht prefixlog.go:107: QUERY worker for: <peer.ID QmNXuB> - not found, and no closer peers.
client_1    | 2015-01-03 15:19:43.520710 DEBUG dht prefixlog.go:107: completing worker for: <peer.ID QmNXuB>
client_1    | 2015-01-03 15:19:43.522261 DEBUG bitswap prefixlog.go:107: bitswap(<peer.ID Qmbtc3>).sendWantlistMsgToPeers(1) <peer.ID Qmbtc2> sending
client_1    | 2015-01-03 15:19:43.522539 DEBUG bitswap prefixlog.go:107: bitswap(<peer.ID Qmbtc3>).bitswap.sendWantlistMsgToPeer(1, <peer.ID Qmbtc2>) sending wantlist
client_1    | 2015-01-03 15:19:43.522564 ERROR dht prefixlog.go:110: FindProviders Query error: routing: not found
client_1    | 2015-01-03 15:19:43.522826 DEBUG bitswap_network ipfs_impl.go:44: bitswap net SendMessage to <peer.ID Qmbtc2>
client_1    | 2015-01-03 15:19:43.523236 DEBUG swarm2 prefixlog.go:107: [<peer.ID Qmbtc3>] network opening stream to peer [<peer.ID Qmbtc2>]
client_1    | 2015-01-03 15:19:43.523480 DEBUG swarm2 prefixlog.go:107: Swarm: NewStreamWithPeer...
bootstrap_1 | 2015-01-03 15:19:45.969082 DEBUG bitswap prefixlog.go:107: bitswap(<peer.ID QmNXuB>).sendWantlistToProviders  begin
bootstrap_1 | 2015-01-03 15:19:45.969497 DEBUG bitswap prefixlog.go:107: bitswap(<peer.ID QmNXuB>).sendWantlistMsgToPeers(0) begin
server_1    | 2015-01-03 15:19:49.244350 DEBUG bitswap prefixlog.go:107: bitswap(<peer.ID Qmbtc2>).sendWantlistToProviders  begin
server_1    | 2015-01-03 15:19:49.244768 DEBUG bitswap prefixlog.go:107: bitswap(<peer.ID Qmbtc2>).sendWantlistMsgToPeers(0) begin
bootstrap_1 | 2015-01-03 15:20:05.970090 DEBUG core prefixlog.go:107: <peer.ID QmNXuB> bootstrapping to 2 more nodes
bootstrap_1 | 2015-01-03 15:20:05.970524 ERROR core prefixlog.go:110: <peer.ID QmNXuB> bootstrap error: must bootstrap to 2 more nodes, but already connected to all candidates
bootstrap_1 | 2015-01-03 15:20:05.970936 ERROR core prefixlog.go:110: must bootstrap to 2 more nodes, but already connected to all candidates
server_1    | 2015-01-03 15:20:09.282515 DEBUG core prefixlog.go:107: <peer.ID Qmbtc2> bootstrapping to 2 more nodes
server_1    | 2015-01-03 15:20:09.283183 ERROR core prefixlog.go:110: <peer.ID Qmbtc2> bootstrap error: must bootstrap to 2 more nodes, but already connected to all candidates
server_1    | 2015-01-03 15:20:09.283380 ERROR core prefixlog.go:110: must bootstrap to 2 more nodes, but already connected to all candidates
client_1    | 2015-01-03 15:20:10.568712 DEBUG core prefixlog.go:107: <peer.ID Qmbtc3> bootstrapping to 2 more nodes
client_1    | 2015-01-03 15:20:10.569356 ERROR core prefixlog.go:110: <peer.ID Qmbtc3> bootstrap error: must bootstrap to 2 more nodes, but already connected to all candidates
client_1    | 2015-01-03 15:20:10.569477 ERROR core prefixlog.go:110: must bootstrap to 2 more nodes, but already connected to all candidates
bootstrap_1 | 2015-01-03 15:20:35.973650 DEBUG core prefixlog.go:107: <peer.ID QmNXuB> bootstrapping to 2 more nodes
bootstrap_1 | 2015-01-03 15:20:35.974195 ERROR core prefixlog.go:110: <peer.ID QmNXuB> bootstrap error: must bootstrap to 2 more nodes, but already connected to all candidates
bootstrap_1 | 2015-01-03 15:20:35.974321 ERROR core prefixlog.go:110: must bootstrap to 2 more nodes, but already connected to all candidates
server_1    | 2015-01-03 15:20:39.285727 DEBUG core prefixlog.go:107: <peer.ID Qmbtc2> bootstrapping to 2 more nodes
server_1    | 2015-01-03 15:20:39.286586 ERROR core prefixlog.go:110: <peer.ID Qmbtc2> bootstrap error: must bootstrap to 2 more nodes, but already connected to all candidates
server_1    | 2015-01-03 15:20:39.286711 ERROR core prefixlog.go:110: must bootstrap to 2 more nodes, but already connected to all candidates
client_1    | 2015-01-03 15:20:40.575571 DEBUG core prefixlog.go:107: <peer.ID Qmbtc3> bootstrapping to 2 more nodes
client_1    | 2015-01-03 15:20:40.578043 ERROR core prefixlog.go:110: <peer.ID Qmbtc3> bootstrap error: must bootstrap to 2 more nodes, but already connected to all candidates
client_1    | 2015-01-03 15:20:40.578259 ERROR core prefixlog.go:110: must bootstrap to 2 more nodes, but already connected to all candidates
client_1    | 2015-01-03 15:20:43.496462 DEBUG bitswap prefixlog.go:107: bitswap(<peer.ID Qmbtc3>).GetBlock(QmcdNXWTJeBd4fKq1vsUWhP8Uy2azPXiRcVozsNgwzP1sf) GetBlockRequestEnd
client_1    | Error: context deadline exceeded
client_1    | --- filetiny	2015-01-03 15:19:43.430013391 +0000
client_1    | +++ /data/filetiny	2015-01-03 15:19:00.000000000 +0000
client_1    | @@ -0,0 +1,34 @@
client_1    | +RANDOMSRC = Godeps/_workspace/src/github.com/jbenet/go-random/random
client_1    | +IMAGE_NAME = ipfs-test-latest
client_1    | +
client_1    | +test: clean setup
client_1    | +	./run-test-on-img.sh $(IMAGE_NAME)
client_1    | +
client_1    | +setup: docker_ipfs_image data/filetiny data/filerand
client_1    | +
client_1    | +save_logs:
client_1    | +	sh bin/save_logs.sh
client_1    | +
client_1    | +data/filetiny: Makefile
client_1    | +	cp Makefile ./data/filetiny # simple
client_1    | +
client_1    | +data/filerand: bin/random
client_1    | +	./bin/random 50000000 > ./data/filerand
client_1    | +
client_1    | +bin/random:
client_1    | +	go build -o ./bin/random ../$(RANDOMSRC)
client_1    | +
client_1    | +# just build it every time... this part isn't
client_1    | +# even the lengthy part, and it decreases pain.
client_1    | +docker_ipfs_image:
client_1    | +	cd .. && docker build -t $(IMAGE_NAME) .
client_1    | +	docker images | grep $(IMAGE_NAME)
client_1    | +
client_1    | +clean:
client_1    | +	sh bin/clean.sh
client_1    | +	fig stop
client_1    | +	fig rm -v --force
client_1    | +	rm -f bin/random
client_1    | +	rm -f data/filetiny
client_1    | +	rm -f data/filerand
client_1    | +	rm -rf build/*
client_1    | files did not match
bootstrap_1 | 2015-01-03 15:20:43.634425 DEBUG conn prefixlog.go:107: <peer.ID QmNXuB> closing Conn with <peer.ID >
bootstrap_1 | 2015-01-03 15:20:43.634887 DEBUG conn prefixlog.go:107: <peer.ID QmNXuB> closing Conn with <peer.ID >
bootstrap_1 | 2015-01-03 15:20:43.635118 DEBUG conn prefixlog.go:107: <peer.ID QmNXuB> closing Conn with <peer.ID >
dockertest_client_1 exited with code 1
Gracefully stopping... (press Ctrl+C again to force)
make save_logs
sh bin/save_logs.sh
tail build/fig.log | grep "exited with code 0"
